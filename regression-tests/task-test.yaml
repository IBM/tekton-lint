---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-with-params-and-inputs
  documentation: https://github.ibm.com/one-pipeline/common-tekton-tasks/git/README.md
spec:
  inputs:
    params:
      - name: credentials-pvc
        description: the output pvc to store credentials
      - name: repository
        description: the git repo url
      - name: ibmcloud-api-key
        description: the IBM Cloud API key
      - name: ibmcloud-api
        description: ibmcloud api endpoint
        default: "https://cloud.ibm.com"
      - name: continuous-delivery-context-secret
        description: name of the configmap containing the continuous delivery pipeline context secrets
        default: cd-secret
      - name: propertiesFile
        description: file containing properties out of clone task
        default: build.properties
      - name: repository-integration
        description: the repo integration name
        default: ""
      - name: some-param
        type: array
  stepTemplate:
    env:
      - name: API_KEY
        value: $(inputs.params.ibmcloud-api-key)
  steps:
    - name: fetch-git-token
      image: ibmcom/pipeline-base-image
      env:
        - name: HOME
          value: "/root"
        - name: API_ENDPOINT
          value: $(inputs.params.ibmcloud-api)
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: PROPERTIES_FILE
          value: $(inputs.params.propertiesFile)
      command: ["/bin/bash", "-c"]
      args: ["$(inputs.params.some-param[*])"]
      volumeMounts:
        - mountPath: /config
          name: config-volume
        - mountPath: /artifacts
          name: task-volume
  volumes:
    - name: config-volume
      configMap:
        name: toolchain
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.credentials-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-without-params
  documentation: https://github.ibm.com/one-pipeline/common-tekton-tasks/git/README.md
spec:
  inputs:
    params: []
  stepTemplate:
    env:
      - name: API_KEY
        value: $(inputs.params.ibmcloud-api-key)
  steps:
    - name: fetch-git-token
      image: ibmcom/pipeline-base-image
      env:
        - name: HOME
          value: "/root"
        - name: API_ENDPOINT
          value: $(inputs.params.ibmcloud-api)
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: PROPERTIES_FILE
          value: $(inputs.params.propertiesFile)
      command: ["/bin/bash", "-c"]
      args:
      volumeMounts:
        - mountPath: /config
          name: config-volume
        - mountPath: /artifacts
          name: task-volume
  volumes:
    - name: config-volume
      configMap:
        name: toolchain
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.credentials-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-null-params
  documentation: https://github.ibm.com/one-pipeline/common-tekton-tasks/git/README.md
spec:
  inputs:
    params:
  stepTemplate:
    env:
      - name: API_KEY
        value: $(inputs.params.ibmcloud-api-key)
  steps:
    - name: fetch-git-token
      image: ibmcom/pipeline-base-image
      env:
        - name: HOME
          value: "/root"
        - name: API_ENDPOINT
          value: $(inputs.params.ibmcloud-api)
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: PROPERTIES_FILE
          value: $(inputs.params.propertiesFile)
      command: ["/bin/bash", "-c"]
      args:
      volumeMounts:
        - mountPath: /config
          name: config-volume
        - mountPath: /artifacts
          name: task-volume
  volumes:
    - name: config-volume
      configMap:
        name: toolchain
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.credentials-pvc)
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-without-volumes
  documentation: https://github.ibm.com/one-pipeline/common-tekton-tasks/git/README.md
spec:
  inputs:
    params: []
  stepTemplate:
    env:
      - name: API_KEY
        value: $(inputs.params.ibmcloud-api-key)
  steps:
    - name: fetch-git-token
      image: ibmcom/pipeline-base-image
      env:
        - name: HOME
          value: "/root"
        - name: API_ENDPOINT
          value: $(inputs.params.ibmcloud-api)
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: PROPERTIES_FILE
          value: $(inputs.params.propertiesFile)
      command: ["/bin/bash", "-c"]
      args:
      volumeMounts:
        - mountPath: /config
          name: config-volume
        - mountPath: /artifacts
          name: task-volume
  volumes: []
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-without-volumes
  documentation: https://github.ibm.com/one-pipeline/common-tekton-tasks/git/README.md
spec:
  inputs:
    params: []
  stepTemplate:
    env:
      - name: API_KEY
        value: $(inputs.params.ibmcloud-api-key)
  steps:
    - name: fetch-git-token
      image: ibmcom/pipeline-base-image
      env:
        - name: HOME
          value: "/root"
        - name: API_ENDPOINT
          value: $(inputs.params.ibmcloud-api)
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: PROPERTIES_FILE
          value: $(inputs.params.propertiesFile)
      command: ["/bin/bash", "-c"]
      args:
      volumeMounts:
        - mountPath: /config
          name: config-volume
        - mountPath: /artifacts
          name: task-volume
  volumes:
---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-with-undefined-volume
  documentation: https://github.ibm.com/one-pipeline/common-tekton-tasks/git/README.md
spec:
  inputs:
    params: []
  stepTemplate:
    env:
      - name: API_KEY
        value: $(inputs.params.ibmcloud-api-key)
  steps:
    - name: fetch-git-token
      image: ibmcom/pipeline-base-image
      env:
        - name: HOME
          value: "/root"
        - name: API_ENDPOINT
          value: $(inputs.params.ibmcloud-api)
        - name: REPOSITORY
          value: $(inputs.params.repository)
        - name: PROPERTIES_FILE
          value: $(inputs.params.propertiesFile)
      command: ["/bin/bash", "-c"]
      args:
      volumeMounts:
        - mountPath: /config
          name: config-volume
        - mountPath: /artifacts
          name: task-volume
  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.credentials-pvc)
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: task-with-params-in-workspaces
spec:
  params:
    - name: foo
  workspaces:
    - name: ws
      mountPath: /$(params.foo)
  steps: []
