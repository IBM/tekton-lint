---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: record-version
spec:
  params:
    - name: version
      default: "refs/tag/000"
    - name: run-build-image
      description: The name of the image used for the run-build step
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"
  workspaces:
    - name: output
      description: A workspace backing by a volume
      mountPath: /artifacts
  results:
    - name: versiontag
  steps:
    - name: run-build
      image: $(params.run-build-image)
      env:
        - name: RELEASE_TAG 
          value: $(params.version)
        - name: WORKSPACE_PATH
          value: $(workspaces.output.path)
        - name: PIPELINE_DEBUG
          value: $(params.pipeline-debug)
      workingDir: $(workspaces.output.path)
      command: ["/bin/bash", "-c"]
      args:
        - |
          set -ex -o pipefail;

          pwd
          ls -lart
          echo $RELEASE_TAG
          
          #  echo $VERSION_TAG | cut -d / -f1
          VERSION_TAG=${RELEASE_TAG##*/}
          echo ${VERSION_TAG} > $(results.versiontag.path)
          echo ${VERSION_TAG} > raw_version.tag          
          # create local runtime env for ray to correctly pass on to the workers
          jq -nMc --arg v $VERSION_TAG '{version: $v}' > version.tag

          cat version.tag


      volumeMounts:
        - name: cd-config-volume
          mountPath: /cd-config
        - name: environment-properties
          mountPath: /cd-config/environment-properties
        - name: secure-properties
          mountPath: /cd-config/secure-properties
  volumes:
    - name: cd-config-volume
      configMap:
        name: toolchain
        items:
          - key: toolchain.json
            path: toolchain.json
    - name: environment-properties
      configMap:
        name: environment-properties
    - name: secure-properties
      secret:
        secretName: secure-properties
