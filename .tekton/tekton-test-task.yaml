apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: task-tekton-test
spec:
  inputs:
    params:
      - name: task-pvc
        description: the task pvc
  steps:
    - name: setup-test-repositories
      image: ibmcom/pipeline-base-image:2.6
      command: ["/bin/bash", "-c"]
      workingDir: "/artifacts"
      args:
        - |
          set -e -o pipefail;
          source build.properties

          echo "Cloning repositories..."
          git clone https://$GIT_AUTH_USER:$GIT_TOKEN@github.ibm.com/one-pipeline/common-tekton-tasks.git
          git clone https://$GIT_AUTH_USER:$GIT_TOKEN@github.ibm.com/one-pipeline/compliance-cd-toolchain.git
          git clone https://$GIT_AUTH_USER:$GIT_TOKEN@github.ibm.com/one-pipeline/compliance-ci-toolchain.git

      volumeMounts:
        - mountPath: /artifacts
          name: task-volume


    - name: tekton-test
      image: wcp-compliance-automation-team-docker-local.artifactory.swg-devops.com/ibm-compliance-automation:0.2
      env:
        - name: PIPELINE_RUN_URL
          valueFrom:
            configMapKeyRef:
              name: context
              key: PIPELINE_RUN_URL
        - name: PR_COMMIT
          valueFrom:
            configMapKeyRef:
              name: context
              key: PR_COMMIT

      command: ["/bin/bash", "-c"]
      workingDir: "/artifacts"
      args:
        - |
          source build.properties

          cd ./tekton-lint
          npm link

          GHE_ORG=${REPOSITORY%/*}
          export GHE_ORG=${GHE_ORG##*/}
          export GIT_COMMIT=$PR_COMMIT
          export GHE_TOKEN
          export GHE_REPO=$REPO

          cocoa set-status --state="pending" --targetURL=$PIPELINE_RUN_URL --context="tekton/tekton-test" --description="Testing on Tekton definitions check is running."

          echo "Running tekton-lint on 'compliance-ci-toolchain', 'compliance-cd-toolchain', 'common-tekton-tasks'..."
          tekton-lint '../common-tekton-tasks/preview/**/*.(yaml|yml)' '../compliance-ci-toolchain/.pipeline/*.(yaml|yml)' '../compliance-cd-toolchain/.tekton/*.(yaml|yml)'

          if [ $? -eq 0 ]; then
            echo "tekton-lint ran successfully!"
            cocoa set-status --state="success" --targetURL=$PIPELINE_RUN_URL --context="tekton/tekton-test" --description="Testing on Tekton definitions check was successful."
          else
            echo "tekton-lint has thrown an error, please fix this issue before merging!"
            cocoa set-status --state="failure" --targetURL=$PIPELINE_RUN_URL --context="tekton/tekton-test" --description="Testing on Tekton definitions check has failed."
            exit 1
          fi

      volumeMounts:
        - mountPath: /artifacts
          name: task-volume

  volumes:
    - name: task-volume
      persistentVolumeClaim:
        claimName: $(inputs.params.task-pvc)
