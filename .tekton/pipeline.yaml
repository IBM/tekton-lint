apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline
spec:
  params:
    - name: repository
      description: the git repo
    - name: target-branch
      description: target branch
    - name: pr-commit
    - name: branch
    - name: pipeline-debug
      default: "0"

  workspaces:
    - name: artifacts

  tasks:
    - name: git-get-credentials
      taskRef:
        name: git-get-credentials
      params:
        - name: repository
          value: $(params.repository)
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts

    - name: clone-repo
      taskRef:
        name: git-clone
      runAfter:
        - git-get-credentials
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts
      params:
        - name: repository
          value: $(params.repository)
        - name: git-user
          value: $(tasks.git-get-credentials.results.git-auth-user)
        - name: branch
          value: $(params.target-branch)

    - name: setup-repo
      runAfter:
        - clone-repo
      taskRef:
        name: util-run
      params:
        - name: script
          value:
            |
            . /root/.nvm/nvm.sh && cd /scripts/tekton-lint

            export NODE_ENV=development

            git config --global user.email "tekton@pipeline.com"
            git config --global user.name "Tekton"
            git merge origin/$(params.branch) --no-ff

            npm i
      workspaces:
        - name: scripts
          workspace: artifacts

    - name: unit-tests-status-pending
      runAfter:
        - git-get-credentials
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.pr-commit)
        - name: state
          value: pending
        - name: context
          value: tekton/unit-tests
        - name: description
          value: "Running unit tests and regression tests"
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: lint-status-pending
      runAfter:
        - git-get-credentials
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.pr-commit)
        - name: state
          value: pending
        - name: context
          value: tekton/lint
        - name: description
          value: "Running linter"
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: tekton-lint-status-pending
      runAfter:
        - git-get-credentials
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.pr-commit)
        - name: state
          value: pending
        - name: context
          value: tekton/tekton-test
        - name: description
          value: "Running tekton tests"
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: unit-tests
      runAfter:
        - setup-repo
        - unit-tests-status-pending
      taskRef:
        name: util-run
      workspaces:
        - name: scripts
          workspace: artifacts
      params:
        - name: script
          value: . /root/.nvm/nvm.sh && cd /scripts/$(echo $(params.repository) | sed -E "s/(.*)(\/)//") && npm run test
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: unit-test-status-set
      runAfter:
        - unit-tests
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.pr-commit)
        - name: state
          value: $(tasks.unit-tests.results.status)
        - name: context
          value: tekton/unit-tests
        - name: description
          value: "Unit tests and regression tests finished"
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: lint
      runAfter:
        - setup-repo
      taskRef:
        name: util-run
      params:
        - name: script
          value: . /root/.nvm/nvm.sh && cd /scripts/$(echo $(params.repository) | sed -E "s/(.*)(\/)//") && npm run lint
      workspaces:
        - name: scripts
          workspace: artifacts

    - name: lint-status-set
      runAfter:
        - lint
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.pr-commit)
        - name: state
          value: $(tasks.lint.results.status)
        - name: context
          value: tekton/lint
        - name: description
          value: "Linter finished"
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: tekton-test
      runAfter:
        - setup-repo
      taskRef:
        name: task-tekton-test
      params:
        - name: git-auth-user
          value: $(tasks.git-get-credentials.results.git-auth-user)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: artifacts
          workspace: artifacts
        - name: secrets
          workspace: artifacts

    - name: tekton-test-status-set
      runAfter:
        - tekton-test
      taskRef:
        name: github-set-status
      workspaces:
        - name: secrets
          workspace: artifacts
      params:
        - name: secret-name
          value: git-token
        - name: repo-url
          value: $(params.repository)
        - name: commit-sha
          value: $(params.pr-commit)
        - name: state
          value: $(tasks.tekton-test.results.status)
        - name: context
          value: tekton/tekton-test
        - name: description
          value: "Tekton tests finished"
        - name: pipeline-debug
          value: $(params.pipeline-debug)

    - name: code-pipeline-evaluator
      taskRef:
        name: util-evaluate-pipeline-results
      params:
        - name: results
          value: |
            [
              {
                "name": "unit-tests",
                "expected": "success",
                "actual": "$(tasks.unit-tests.results.status)"
              },
              {
                "name": "lint",
                "expected": "success",
                "actual": "$(tasks.lint.results.status)"
              },
              {
                "name": "tekton-test",
                "expected": "success",
                "actual": "$(tasks.tekton-test.results.status)"
              }
            ]
